{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project Documentation","text":"<p>This repository demonstrates my approach to setting up a development environment, writing code, and creating tests.</p> <p>Repository location: here</p>"},{"location":"#reference-diagrams","title":"Reference Diagrams","text":""},{"location":"architecture/","title":"Architecture","text":""},{"location":"diagrams-page/","title":"Diagrams Examples","text":""},{"location":"diagrams-page/#inline-diagrams","title":"Inline Diagrams","text":"<pre>d464a8dc726c45549f40d8b1a13b7bd74d2ba9784b830a5dbd692769dde1697d478c6545a95aa9772809d96d8cc6d2b245748531466521a2a6b6bc839921a9cf</pre><pre>0b6496354d48ab67277131b4f58deeac47f7d92e3e7ec476ae4c3301e38123f63b59b522c49c5bcbfd33b704569527d1f91cd6b7353eb53871a94f4fa701758d</pre>"},{"location":"roadmap/","title":"Roadmap","text":""},{"location":"roadmap/#1-project-foundation-setup","title":"1. Project Foundation &amp; Setup","text":"<ul> <li>I generate a project using Spring Initializr (last release version)</li> <li>I use Java 21 as the language level (last LTS version)</li> <li>I add Spring Boot DevTools for hot deployment</li> <li>I choose Maven as the build tool (simplicity in small projects)</li> <li>I would consider using Gradle for better performance in complex projects</li> </ul>"},{"location":"roadmap/#2-ide-configuration-developer-experience","title":"2. IDE Configuration &amp; Developer Experience","text":"<ul> <li>I use IntelliJ IDEA as my IDE</li> <li>I use Save Actions plugin for code formatting</li> <li>I choose Google Java Style for code formatting</li> <li>I don't use any special profilers or code coverage tools at this point</li> </ul>"},{"location":"roadmap/#3-code-quality-standards","title":"3. Code Quality &amp; Standards","text":"<ul> <li>I add Checkstyle plugin for static code analysis</li> <li>I add PMD plugin for static code analysis</li> <li>I add Spotbugs plugin for static code analysis</li> <li>I add SonarLint plugin for static code analysis within IDE</li> <li>I would consider using Error Pron and SonarQube for bigger projects</li> </ul>"},{"location":"roadmap/#4-version-control-git-workflow","title":"4. Version Control &amp; Git Workflow","text":"<ul> <li>I use Git for version control</li> <li>I use a default .gitignore file from Spring Initializr</li> <li>I use GitHub for hosting the repository</li> <li>I use a trunk-based development workflow for smaller projects</li> <li>I would consider using GitFlow for bigger projects with more contributors</li> <li>I use conventional commits for commit messages</li> <li>I use simple CI for basic checks (e.g., build, test, lint)</li> </ul>"},{"location":"roadmap/#5-domain-modeling-architecture-design","title":"5. Domain Modeling &amp; Architecture Design","text":"<ul> <li>I use DDD for domain modeling</li> <li>I use Microservices architecture for scaling</li> <li>I use one microservice per bounded context</li> <li>Within each application, I use one module per aggregate</li> <li>In this showcase project, for simplicity, I use very few aggregates</li> <li>Most of the work here is being done externally and will be documented in the next section</li> </ul>"},{"location":"roadmap/#6-documentation-knowledge-sharing","title":"6. Documentation &amp; Knowledge Sharing","text":"<ul> <li>I use MkDocs for documentation</li> <li>I use a simple CI for publishing the documentation to GitHub Pages</li> <li></li> </ul>"}]}